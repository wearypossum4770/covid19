{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/steve/web_dev/covid/src/Dropbox.js\";\n// import dbx from 'dropbox'\nconst UPLOAD_FILE_SIZE_LIMIT = 150 * 1024 * 1024; // let storage =  new DropBoxStorage.DropBox({accessToken:process.env.REACT_APP_DROPBOX_SECRET})\n\nconst uploadFile = e => {\n  e.preventDefault();\n};\n\nconst DropBoxStorage = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"This example shows how to use the \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"Dropbox.filesUpload()\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 43\n      }, this), \" [\", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"http://dropbox.github.io/dropbox-sdk-js/Dropbox.html#filesUpload\",\n        children: \"docs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), \"] method to upload a file.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: uploadFile,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"access-token\",\n        placeholder: \"Access token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = DropBoxStorage;\nexport default DropBoxStorage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropBoxStorage\");","map":{"version":3,"sources":["/home/steve/web_dev/covid/src/Dropbox.js"],"names":["UPLOAD_FILE_SIZE_LIMIT","uploadFile","e","preventDefault","DropBoxStorage"],"mappings":";;AAAA;AACA,MAAMA,sBAAsB,GAAG,MAAM,IAAN,GAAa,IAA5C,C,CACA;;AACA,MAAMC,UAAU,GAAIC,CAAD,IAAO;AACxBA,EAAAA,CAAC,CAACC,cAAF;AACD,CAFD;;AAGA,MAAMC,cAAc,GAAG,MAAM;AAC3B,sBACE;AAAA,4BACE;AAAA,oEACoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADpC,qBAEE;AAAG,QAAA,IAAI,EAAC,kEAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAM,MAAA,QAAQ,EAAEH,UAAhB;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,cAAtB;AAAqC,QAAA,WAAW,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAjBD;;KAAMG,c;AAkBN,eAAeA,cAAf","sourcesContent":["// import dbx from 'dropbox'\nconst UPLOAD_FILE_SIZE_LIMIT = 150 * 1024 * 1024;\n// let storage =  new DropBoxStorage.DropBox({accessToken:process.env.REACT_APP_DROPBOX_SECRET})\nconst uploadFile = (e) => {\n  e.preventDefault();\n};\nconst DropBoxStorage = () => {\n  return (\n    <div>\n      <p>\n        This example shows how to use the <code>Dropbox.filesUpload()</code> [\n        <a href=\"http://dropbox.github.io/dropbox-sdk-js/Dropbox.html#filesUpload\">\n          docs\n        </a>\n        ] method to upload a file.\n      </p>\n      <form onSubmit={uploadFile}>\n        <input type=\"text\" id=\"access-token\" placeholder=\"Access token\" />\n        <input type=\"file\" id=\"file-upload\" />\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n};\nexport default DropBoxStorage;\n"]},"metadata":{},"sourceType":"module"}